start: 74
end: 191
context: '[N] -> {  : N <= 2147483647 and N >= -2147483648 }'
arrays:
- context: '{  :  }'
  extent: '[N] -> { __pet_test_0[T] : T >= 0 }'
  value_bounds: '{ [i0] : i0 >= 0 and i0 <= 1 }'
  element_type: int
  element_size: 4
  uniquely_defined: 1
- context: '{  :  }'
  extent: '[N] -> { s[] }'
  element_type: int
  element_size: 4
statements:
- line: 11
  domain: '[N] -> { S_0[] }'
  schedule: '{ S_0[] -> [0] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '[N] -> { S_0[] -> s[] }'
      index: '[N] -> { S_0[] -> s[] }'
      reference: __pet_ref_0
      read: 0
      write: 1
    - type: int
      value: 0
- line: 12
  domain: '[N] -> { [S_1[T] -> [1]] : T >= 0 }'
  schedule: '{ S_1[T] -> [1, T, 0] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '[N] -> { S_1[T] -> __pet_test_0[T] }'
      index: '[N] -> { S_1[T] -> __pet_test_0[(T)] }'
      reference: __pet_ref_2
      read: 0
      write: 1
    - type: call
      name: t
  arguments:
  - type: access
    relation: '[N] -> { S_1[T] -> __pet_test_0[-1 + T] : T >= 1 }'
    index: '[N] -> { S_1[T] -> __pet_test_0[((-1 + T) : T >= 1)] }'
    reference: __pet_ref_1
    read: 1
    write: 0
- line: 14
  domain: '[N] -> { [S_2[T, i] -> [1]] : T >= 0 and i >= 0 and N <= 1073741823 and
    i <= -1 + 2N }'
  schedule: '[N] -> { S_2[T, i] -> [1, T, 1, 0, i] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '[N] -> { S_2[T, i] -> s[] }'
      index: '[N] -> { S_2[T, i] -> s[] }'
      reference: __pet_ref_4
      read: 0
      write: 1
    - type: binary
      operation: +
      arguments:
      - type: access
        relation: '[N] -> { S_2[T, i] -> s[] }'
        index: '[N] -> { S_2[T, i] -> s[] }'
        reference: __pet_ref_5
        read: 1
        write: 0
      - type: int
        value: 1
  arguments:
  - type: access
    relation: '[N] -> { S_2[T, i] -> __pet_test_0[T] }'
    index: '[N] -> { S_2[T, i] -> __pet_test_0[(T)] }'
    reference: __pet_ref_3
    read: 1
    write: 0
implications:
- satisfied: 1
  extension: '{ __pet_test_0[T] -> __pet_test_0[T''] : T'' <= T and T'' >= 0 }'
