context: '[N] -> {  : N <= 2147483647 and N >= -2147483648 }'
arrays:
- context: '{  :  }'
  extent: '[N] -> { __pet_test_0[t] : t >= 0 }'
  value_bounds: '{ [i0] : i0 >= 0 and i0 <= 1 }'
  element_type: int
  element_size: 4
  uniquely_defined: 1
- context: '{  :  }'
  extent: '[N] -> { s[] }'
  element_type: int
  element_size: 4
statements:
- line: 11
  domain: '[N] -> { S_0[] }'
  schedule: '{ S_0[] -> [0] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '[N] -> { S_0[] -> s[] }'
      read: 0
      write: 1
    - type: access
      relation: '[N] -> { S_0[] -> [0] }'
      read: 1
      write: 0
- line: 12
  domain: '[N] -> { [S_1[t] -> [1]] : t >= 0 }'
  schedule: '{ S_1[t] -> [1, t, 0] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '[N] -> { S_1[t] -> __pet_test_0[t] }'
      read: 0
      write: 1
    - type: call
      name: t
  arguments:
  - type: access
    relation: '[N] -> { S_1[t] -> __pet_test_0[o0] : o0 <= -1 + t and o0 >= 0 }'
    read: 1
    write: 0
- line: 14
  domain: '[N] -> { [S_2[t, i] -> [1]] : t >= 0 and i <= -1 + 2N and N <= 1073741823
    and i >= 0 }'
  schedule: '[N] -> { S_2[t, i] -> [1, t, 1, 0, i] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '[N] -> { S_2[t, i] -> s[] }'
      read: 0
      write: 1
    - type: binary
      operation: +
      arguments:
      - type: access
        relation: '[N] -> { S_2[t, i] -> s[] }'
        read: 1
        write: 0
      - type: access
        relation: '[N] -> { S_2[t, i] -> [1] }'
        read: 1
        write: 0
  arguments:
  - type: access
    relation: '[N] -> { S_2[t, i] -> __pet_test_0[o0] : o0 >= 0 and o0 <= t }'
    read: 1
    write: 0
