start: 30
end: 232
indent: "\t"
context: '{  :  }'
schedule: '{ domain: "{ S_3[i = -1]; S_5[]; S_2[i = 1]; S_0[i = -2]; S_4[]; S_1[i
  = 2] }", child: { sequence: [ { filter: "{ S_3[i]; S_2[i]; S_0[i]; S_1[i] }", child:
  { schedule: "L_0[{ S_2[i] -> [(i)]; S_3[i] -> [(i)]; S_0[i] -> [(i)]; S_1[i] ->
  [(i)] }]", child: { sequence: [ { filter: "{ S_0[i] }" }, { filter: "{ S_1[i] }"
  }, { filter: "{ S_2[i] }" }, { filter: "{ S_3[i] }" } ] } } }, { filter: "{ S_5[];
  S_4[] }", child: { set: [ { filter: "{ S_4[] }" }, { filter: "{ S_5[] }" } ] } }
  ] } }'
arrays:
- context: '{  :  }'
  extent: '{ a[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ i[] }'
  element_type: int
  element_size: 4
statements:
- line: 9
  domain: '{ S_0[i = -2] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_0[i] -> a[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: op
        operation: /
        arguments:
        - type: int
          value: 5
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 2
- line: 11
  domain: '{ S_1[i = 2] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_1[i] -> a[] }'
        reference: __pet_ref_1
        read: 0
        write: 1
      - type: op
        operation: /
        arguments:
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 5
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 2
- line: 13
  domain: '{ S_2[i = 1] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_2[i] -> a[] }'
        reference: __pet_ref_2
        read: 0
        write: 1
      - type: op
        operation: '%'
        arguments:
        - type: int
          value: 5
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 2
- line: 15
  domain: '{ S_3[i = -1] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_3[i] -> a[] }'
        reference: __pet_ref_3
        read: 0
        write: 1
      - type: op
        operation: '%'
        arguments:
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 5
        - type: op
          operation: '-'
          arguments:
          - type: int
            value: 2
- line: -1
  domain: '{ S_4[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_4[] -> i[] }'
        index: '{ S_4[] -> i[] }'
        reference: __pet_ref_4
        kill: 1
- line: -1
  domain: '{ S_5[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_5[] -> a[] }'
        index: '{ S_5[] -> a[] }'
        reference: __pet_ref_5
        kill: 1
