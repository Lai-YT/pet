start: 42
end: 206
indent: "\t"
context: '[N] -> {  : 0 <= N <= 2147483647 }'
schedule: '{ domain: "[N] -> { S_5[]; S_4[]; S_0[i = 99, t, j] : t >= 0 and 0 <= j
  < N; S_1[i = 99, t, j] : t >= 0 and 0 <= j < N; S_3[]; S_2[] }", child: { sequence:
  [ { filter: "[N] -> { S_0[i, t, j]; S_1[i, t, j] }", child: { schedule: "[N] ->
  L_0[{ S_0[i, t, j] -> [(i)]; S_1[i, t, j] -> [(i)] }]", child: { schedule: "[N]
  -> L_1[{ S_0[i, t, j] -> [(t)]; S_1[i, t, j] -> [(t)] }]", child: { sequence: [
  { filter: "[N] -> { S_0[i, t, j] }", child: { schedule: "[N] -> L_2[{ S_0[i, t,
  j] -> [(j)] }]" } }, { filter: "[N] -> { S_1[i, t, j] }", child: { schedule: "[N]
  -> L_3[{ S_1[i, t, j] -> [(j)] }]" } } ] } } } }, { filter: "[N] -> { S_5[]; S_4[];
  S_3[]; S_2[] }", child: { set: [ { filter: "{ S_2[] }" }, { filter: "{ S_3[] }"
  }, { filter: "{ S_4[] }" }, { filter: "{ S_5[] }" } ] } } ] } }'
arrays:
- context: '[N] -> {  : N >= 0 }'
  extent: '[N] -> { a[i0] : 0 <= i0 < N }'
  element_type: int
  element_size: 4
- context: '[N] -> {  : N >= 0 }'
  extent: '[N] -> { b[i0] : 0 <= i0 < N }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '[N] -> { i[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '[N] -> { j[] }'
  element_type: int
  element_size: 4
statements:
- line: 9
  domain: '[N] -> { S_0[i = 99, t, j] : t >= 0 and 0 <= j < N }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[N] -> { S_0[i, t, j] -> a[(j)] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: int
        value: 0
- line: 11
  domain: '[N] -> { S_1[i = 99, t, j] : t >= 0 and 0 <= j < N }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[N] -> { S_1[i, t, j] -> b[(j)] }'
        reference: __pet_ref_1
        read: 0
        write: 1
      - type: access
        index: '[N] -> { S_1[i, t, j] -> a[(j)] }'
        reference: __pet_ref_2
        read: 1
        write: 0
- line: -1
  domain: '[N] -> { S_2[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[N] -> { S_2[] -> i[] }'
        index: '[N] -> { S_2[] -> i[] }'
        reference: __pet_ref_3
        kill: 1
- line: -1
  domain: '[N] -> { S_3[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[N] -> { S_3[] -> j[] }'
        index: '[N] -> { S_3[] -> j[] }'
        reference: __pet_ref_4
        kill: 1
- line: -1
  domain: '[N] -> { S_4[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[N] -> { S_4[] -> a[o0] : 0 <= o0 < N }'
        index: '[N] -> { S_4[] -> a[] }'
        depth: 1
        reference: __pet_ref_5
        kill: 1
- line: -1
  domain: '[N] -> { S_5[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[N] -> { S_5[] -> b[o0] : 0 <= o0 < N }'
        index: '[N] -> { S_5[] -> b[] }'
        depth: 1
        reference: __pet_ref_6
        kill: 1
