start: 50
end: 172
indent: "\t"
context: '{  :  }'
schedule: '{ domain: "{ S_2[k] : k <= 261 and k >= 252; S_0[k] : (exists (e0 = floor((k)/256):
  k <= 261 and k >= 252 and 256e0 >= -255 + k and 256e0 <= -2 + k)) or (exists (e0
  = floor((k)/256): 256e0 = k and k <= 261 and k >= 252)); S_1[k] : k <= 261 and k
  >= 252 }", child: { schedule: "L_0[{ S_2[k] -> [(k)]; S_1[k] -> [(k)]; S_0[k] ->
  [(k)] }]", child: { sequence: [ { filter: "{ S_0[k] }" }, { filter: "{ S_1[k] }"
  }, { filter: "{ S_2[k] }" } ] } } }'
arrays:
- context: '{  :  }'
  extent: '{ __pet_test_0[k] : k <= 261 and k >= 252 }'
  value_bounds: '{ [i0] : i0 >= 0 and i0 <= 1 }'
  element_type: int
  element_size: 4
  uniquely_defined: 1
- context: '{  :  }'
  extent: '{ a[] }'
  element_type: int
  element_size: 4
statements:
- line: 11
  domain: '{ [S_0[k] -> [0]] : (exists (e0 = floor((k)/256): k <= 261 and k >= 252
    and 256e0 >= -255 + k and 256e0 <= -2 + k)) or (exists (e0 = floor((k)/256): 256e0
    = k and k <= 261 and k >= 252)) }'
  schedule: '{ S_0[k] -> [0, k, 0] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_0[k] -> a[] }'
        reference: __pet_ref_1
        read: 0
        write: 1
      - type: int
        value: 5
  arguments:
  - type: access
    index: '{ S_0[k] -> __pet_test_0[((-1 + k) : k >= 253)] }'
    reference: __pet_ref_0
    read: 1
    write: 0
- line: 12
  domain: '{ [S_1[k] -> [0]] : k <= 261 and k >= 252 }'
  schedule: '{ S_1[k] -> [0, k, 1, 0] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_1[k] -> __pet_test_0[(k)] }'
        reference: __pet_ref_3
        read: 0
        write: 1
      - type: call
        name: f
  arguments:
  - type: access
    index: '{ S_1[k] -> __pet_test_0[((-1 + k) : k >= 253)] }'
    reference: __pet_ref_2
    read: 1
    write: 0
- line: 14
  domain: '{ [S_2[k] -> [0]] : k <= 261 and k >= 252 }'
  schedule: '{ S_2[k] -> [0, k, 2] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_2[k] -> a[] }'
        reference: __pet_ref_5
        read: 0
        write: 1
      - type: access
        index: '{ S_2[k] -> [(k - 256*floor((k)/256))] }'
        reference: __pet_ref_6
        read: 1
        write: 0
  arguments:
  - type: access
    index: '{ S_2[k] -> __pet_test_0[(k)] }'
    reference: __pet_ref_4
    read: 1
    write: 0
implications:
- satisfied: 0
  extension: '{ __pet_test_0[k] -> __pet_test_0[k''] : k'' <= k and k'' <= 261 and
    k'' >= 252 }'
