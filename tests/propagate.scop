start: 66
end: 204
indent: "\t"
context: '[N] -> {  : N <= 2147483647 and N >= 0 }'
schedule: '{ domain: "[N] -> { S_4[]; S_1[i, j] : i >= 0 and j >= i and j <= -1 +
  N; S_0[i, j] : i >= 0 and j >= i and j <= -1 + N; S_3[]; S_2[] }", child: { sequence:
  [ { filter: "[N] -> { S_1[i, j]; S_0[i, j] }", child: { schedule: "[N] -> L_0[{
  S_1[i, j] -> [(i)]; S_0[i, j] -> [(i)] }]", child: { schedule: "[N] -> L_1[{ S_1[i,
  j] -> [(j)]; S_0[i, j] -> [(j)] }]", child: { sequence: [ { filter: "[N] -> { S_0[i,
  j] }" }, { filter: "[N] -> { S_1[i, j] }" } ] } } } }, { filter: "[N] -> { S_4[];
  S_3[]; S_2[] }", child: { set: [ { filter: "{ S_2[] }" }, { filter: "{ S_3[] }"
  }, { filter: "{ S_4[] }" } ] } } ] } }'
arrays:
- context: '[N] -> {  : N >= 0 }'
  extent: '[N] -> { a[i0, i1] : i0 >= 0 and i1 >= 0 and i1 <= -1 + N }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '[N] -> { i[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '[N] -> { ind[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '[N] -> { j[] }'
  element_type: int
  element_size: 4
statements:
- line: 9
  domain: '[N] -> { S_0[i, j] : i >= 0 and j >= i and j <= -1 + N }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[N] -> { S_0[i, j] -> ind[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: op
        operation: '?:'
        arguments:
        - type: op
          operation: '>'
          arguments:
          - type: access
            index: '[N] -> { S_0[i, j] -> [(i)] }'
            reference: __pet_ref_1
            read: 1
            write: 0
          - type: int
            value: 0
        - type: op
          operation: '-'
          arguments:
          - type: access
            index: '[N] -> { S_0[i, j] -> [(i)] }'
            reference: __pet_ref_2
            read: 1
            write: 0
          - type: int
            value: 1
        - type: access
          index: '[N] -> { S_0[i, j] -> [(i)] }'
          reference: __pet_ref_3
          read: 1
          write: 0
- line: 10
  domain: '[N] -> { S_1[i, j] : i >= 0 and j >= i and j <= -1 + N }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[N] -> { S_1[i, j] -> a[(i), (j)] }'
        reference: __pet_ref_4
        read: 0
        write: 1
      - type: access
        index: '[N] -> { S_1[i, j] -> a[((-1 + i) : i >= 1; (0) : i = 0), (0)] }'
        reference: __pet_ref_5
        read: 1
        write: 0
- line: -1
  domain: '[N] -> { S_2[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[N] -> { S_2[] -> i[] }'
        index: '[N] -> { S_2[] -> i[] }'
        reference: __pet_ref_6
        kill: 1
- line: -1
  domain: '[N] -> { S_3[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[N] -> { S_3[] -> j[] }'
        index: '[N] -> { S_3[] -> j[] }'
        reference: __pet_ref_7
        kill: 1
- line: -1
  domain: '[N] -> { S_4[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[N] -> { S_4[] -> ind[] }'
        index: '[N] -> { S_4[] -> ind[] }'
        reference: __pet_ref_8
        kill: 1
