start: 16
end: 107
indent: "\t"
context: '[n] -> {  : n <= 2147483647 and n >= -2147483648 }'
schedule: '{ domain: "[n] -> { S_0[]; S_2[i] : i >= 0 and i <= -1 + n; S_1[i] : i
  >= 0 and i <= -1 + n }", child: { sequence: [ { filter: "[n] -> { S_0[] }" }, {
  filter: "[n] -> { S_2[i]; S_1[i] }", child: { schedule: "[n] -> L_0[{ S_2[i] ->
  [(i)]; S_1[i] -> [(i)] }]", child: { sequence: [ { filter: "[n] -> { S_1[i] }" },
  { filter: "[n] -> { S_2[i] }" } ] } } } ] } }'
arrays:
- context: '[n] -> {  : n >= 0 }'
  extent: '[n] -> { a[i0] : i0 >= 0 and i0 <= -1 + n }'
  element_type: float
  element_size: 4
  declared: 1
  exposed: 1
- context: '[n] -> {  : n >= 0 }'
  extent: '[n] -> { b[i0] : i0 >= 0 and i0 <= -1 + n }'
  element_type: float
  element_size: 4
  declared: 1
statements:
- line: 4
  domain: '[n] -> { S_0[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[n] -> { S_0[] -> a[o0] : o0 >= 0 and o0 <= -1 + n }'
        index: '[n] -> { S_0[] -> a[] }'
        depth: 1
        reference: __pet_ref_0
        kill: 1
- line: 7
  domain: '[n] -> { S_1[i] : i >= 0 and i <= -1 + n }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[n] -> { S_1[i] -> b[o0] : o0 <= -1 + n and o0 >= 0 }'
        index: '[n] -> { S_1[i] -> b[] }'
        depth: 1
        reference: __pet_ref_1
        kill: 1
- line: 7
  domain: '[n] -> { S_2[i] : i >= 0 and i <= -1 + n }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[n] -> { S_2[i] -> b[o0] : o0 <= -1 + n and o0 >= 0 }'
        index: '[n] -> { S_2[i] -> b[] }'
        depth: 1
        reference: __pet_ref_2
        kill: 1
