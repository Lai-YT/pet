start: 50
end: 174
indent: '    '
context: '{  :  }'
schedule: '{ domain: "{ S_0[i] : i >= 0 and i <= 99; S_1[i] : i >= 0 and i <= 99 }",
  child: { schedule: "L_0[{ S_0[i] -> [(i)]; S_1[i] -> [(i)] }]", child: { sequence:
  [ { filter: "{ S_0[i] }" }, { filter: "{ S_1[i] }" } ] } } }'
arrays:
- context: '{  :  }'
  extent: '{ a[i0] : i0 >= 0 and i0 <= 99 }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ j[] }'
  element_type: int
  element_size: 4
statements:
- line: 9
  domain: '{ S_0[i] : i >= 0 and i <= 99 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_0[i] -> j[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: call
        name: f
- line: 12
  domain: '{ [S_1[i] -> [i1]] : i >= 0 and i <= 99 and i1 <= 1 and i1 >= 0 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_1[i] -> a[(i)] }'
        reference: __pet_ref_2
        read: 0
        write: 1
      - type: access
        index: '{ S_1[i] -> [(i)] }'
        reference: __pet_ref_3
        read: 1
        write: 0
  arguments:
  - type: access
    index: '{ S_1[i] -> j[] }'
    reference: __pet_ref_1
    read: 1
    write: 0
