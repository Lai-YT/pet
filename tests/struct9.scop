start: 127
end: 359
indent: "\t"
context: '{  :  }'
types:
- name: s
  definition: "struct s {\n    int a[30][40];\n}"
arrays:
- context: '{  :  }'
  extent: '{ s[i0, i1] : i0 >= 0 and i1 >= 0 and i0 <= 9 and i1 <= 19 }'
  element_type: struct s
  element_size: 4800
  element_is_record: 1
- context: '{  :  }'
  extent: '{ s_a[s[i0, i1] -> a[i2, i3]] : i0 >= 0 and i1 >= 0 and i0 <= 9 and i1
    <= 19 and i2 >= 0 and i3 >= 0 and i2 <= 29 and i3 <= 39 }'
  element_type: int
  element_size: 4
statements:
- line: 18
  domain: '{ S_0[i, j, k, l] : i >= 0 and i <= 9 and j >= 0 and j <= 19 and k >= 0
    and k <= 29 and l >= 0 and l <= 39 }'
  schedule: '{ S_0[i, j, k, l] -> [0, i, j, k, l, 0] }'
  body:
    type: expression
    expr:
      type: call
      name: f1
      arguments:
      - type: access
        index: '{ S_0[i, j, k, l] -> s_a[s[(i), (j)] -> a[(k), (l)]] }'
        reference: __pet_ref_0
        read: 1
        write: 0
- line: 19
  domain: '{ S_1[i, j, k, l] : i >= 0 and i <= 9 and j >= 0 and j <= 19 and k >= 0
    and k <= 29 and l >= 0 and l <= 39 }'
  schedule: '{ S_1[i, j, k, l] -> [0, i, j, k, l, 1] }'
  body:
    type: expression
    expr:
      type: call
      name: f2
      arguments:
      - type: access
        index: '{ S_1[i, j, k, l] -> s_a[s[(i), (j)] -> a[(k)]] }'
        depth: 4
        reference: __pet_ref_1
        read: 0
        write: 1
- line: 20
  domain: '{ S_2[i, j, k, l] : i >= 0 and i <= 9 and j >= 0 and j <= 19 and k >= 0
    and k <= 29 and l >= 0 and l <= 39 }'
  schedule: '{ S_2[i, j, k, l] -> [0, i, j, k, l, 2] }'
  body:
    type: expression
    expr:
      type: call
      name: f3
      arguments:
      - type: access
        index: '{ S_2[i, j, k, l] -> s_a[s[(i), (j)] -> a[]] }'
        depth: 4
        reference: __pet_ref_2
        read: 0
        write: 1
