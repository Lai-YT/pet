start: 56
end: 174
indent: "\t"
context: '[N] -> {  : N <= 2147483647 and N >= 0 }'
schedule: '{ domain: "[N] -> { S_1[]; S_0[i, j] : i >= 0 and j >= i and j <= -1 +
  N; S_2[] }", child: { sequence: [ { filter: "[N] -> { S_0[i, j] }", child: { schedule:
  "[N] -> L_0[{ S_0[i, j] -> [(i)] }]", child: { schedule: "[N] -> L_1[{ S_0[i, j]
  -> [(j)] }]" } } }, { filter: "[N] -> { S_1[]; S_2[] }", child: { set: [ { filter:
  "{ S_1[] }" }, { filter: "{ S_2[] }" } ] } } ] } }'
arrays:
- context: '[N] -> {  : N >= 0 }'
  extent: '[N] -> { a[i0, i1] : i0 >= 0 and i1 >= 0 and i1 <= -1 + N }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '[N] -> { i[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '[N] -> { j[] }'
  element_type: int
  element_size: 4
statements:
- line: 8
  domain: '[N] -> { S_0[i, j] : i >= 0 and j >= i and j <= -1 + N }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[N] -> { S_0[i, j] -> a[(i), (j)] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: access
        index: '[N] -> { S_0[i, j] -> a[((-1 + i) : i >= 1; (0) : i = 0), (0)] }'
        reference: __pet_ref_1
        read: 1
        write: 0
- line: -1
  domain: '[N] -> { S_1[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[N] -> { S_1[] -> i[] }'
        index: '[N] -> { S_1[] -> i[] }'
        reference: __pet_ref_2
        kill: 1
- line: -1
  domain: '[N] -> { S_2[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[N] -> { S_2[] -> j[] }'
        index: '[N] -> { S_2[] -> j[] }'
        reference: __pet_ref_3
        kill: 1
