start: 34
end: 124
indent: "\t"
context: '{  :  }'
schedule: '{ domain: "{ S_0[i] : 0 <= i <= 9 and (i >= 7 or i <= 4); S_2[]; S_1[]
  }", child: { sequence: [ { filter: "{ S_0[i] }", child: { schedule: "L_0[{ S_0[i]
  -> [(i)] }]" } }, { filter: "{ S_2[]; S_1[] }", child: { set: [ { filter: "{ S_1[]
  }" }, { filter: "{ S_2[] }" } ] } } ] } }'
arrays:
- context: '{  :  }'
  extent: '{ a[i0] : 0 <= i0 <= 9 }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ i[] }'
  element_type: int
  element_size: 4
statements:
- line: 9
  domain: '{ S_0[i] : 0 <= i <= 9 and (i >= 7 or i <= 4) }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_0[i] -> a[(i)] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: access
        index: '{ S_0[i] -> [(i)] }'
        reference: __pet_ref_1
        read: 1
        write: 0
- line: -1
  domain: '{ S_1[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_1[] -> i[] }'
        index: '{ S_1[] -> i[] }'
        reference: __pet_ref_2
        kill: 1
- line: -1
  domain: '{ S_2[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_2[] -> a[o0] : 0 <= o0 <= 9 }'
        index: '{ S_2[] -> a[] }'
        depth: 1
        reference: __pet_ref_3
        kill: 1
