start: 21
end: 103
indent: "\t"
context: '{  :  }'
arrays:
- context: '{  :  }'
  extent: '{ s[] }'
  element_type: int
  element_size: 4
  declared: 1
- context: '{  :  }'
  extent: '{ A[i0] : i0 >= 0 }'
  element_type: int
  element_size: 4
statements:
- line: 5
  domain: '{ S_5[] }'
  schedule: '{ S_5[] -> [0, 0] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        relation: '{ S_5[] -> s[] }'
        index: '{ S_5[] -> s[] }'
        reference: __pet_ref_0
        read: 0
        write: 0
- line: 4
  domain: '{ S_4[] }'
  schedule: '{ S_4[] -> [0, 1] }'
  body:
    type: while
    condition:
      type: int
      value: 1
    body:
      type: block
      block: 1
      children:
      - type: declaration-init
        variable:
          type: access
          relation: '{ S_4[] -> s[] }'
          index: '{ S_4[] -> s[] }'
          reference: __pet_ref_1
          read: 0
          write: 1
        initialization:
          type: access
          relation: '{ S_4[] -> A[0] }'
          index: '{ S_4[] -> A[(0)] }'
          reference: __pet_ref_2
          read: 1
          write: 0
      - type: if
        condition:
          type: op
          operation: '!'
          arguments:
          - type: access
            relation: '{ S_4[] -> s[] }'
            index: '{ S_4[] -> s[] }'
            reference: __pet_ref_3
            read: 1
            write: 0
        then:
          type: break
- line: 5
  domain: '{ S_6[] }'
  schedule: '{ S_6[] -> [0, 2] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        relation: '{ S_6[] -> s[] }'
        index: '{ S_6[] -> s[] }'
        reference: __pet_ref_4
        read: 0
        write: 0
