start: 83
end: 210
indent: "\t"
context: '[n] -> {  : n <= 2147483647 and n >= -2147483648 }'
schedule: '{ domain: "[n] -> { S1[x] : x >= 0 and x <= -1 + n; S_3[x] : x >= 0 and
  x <= -1 + n; R[x] : x >= 0 and x <= -1 + n }", child: { schedule: "[n] -> L_0[{
  S1[x] -> [(x)]; R[x] -> [(x)]; S_3[x] -> [(x)] }]", child: { sequence: [ { filter:
  "[n] -> { S1[x] }" }, { filter: "[n] -> { S_3[x] }" }, { filter: "[n] -> { R[x]
  }" } ] } } }'
arrays:
- context: '{  :  }'
  extent: '[n] -> { s[] }'
  element_type: int
  element_size: 4
statements:
- line: 12
  domain: '[n] -> { S1[x] : x >= 0 and x <= -1 + n }'
  schedule: '[n] -> { S1[x] -> [0, x, 0] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[n] -> { S1[x] -> s[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: call
        name: f
- line: 13
  domain: '[n] -> { S_3[x] : x >= 0 and x <= -1 + n }'
  schedule: '[n] -> { S_3[x] -> [0, x, 1] }'
  body:
    type: while
    condition:
      type: call
      name: P
      arguments:
      - type: access
        index: '[n] -> { S_3[x] -> [(x)] }'
        reference: __pet_ref_1
        read: 1
        write: 0
      - type: access
        index: '[n] -> { S_3[x] -> s[] }'
        reference: __pet_ref_2
        read: 1
        write: 0
    body:
      type: block
      block: 1
      children:
      - type: expression
        expr:
          type: op
          operation: =
          arguments:
          - type: access
            index: '[n] -> { S_3[x] -> s[] }'
            reference: __pet_ref_3
            read: 0
            write: 1
          - type: call
            name: g
            arguments:
            - type: access
              index: '[n] -> { S_3[x] -> s[] }'
              reference: __pet_ref_4
              read: 1
              write: 0
- line: 16
  domain: '[n] -> { R[x] : x >= 0 and x <= -1 + n }'
  schedule: '[n] -> { R[x] -> [0, x, 2] }'
  body:
    type: expression
    expr:
      type: call
      name: h
      arguments:
      - type: access
        index: '[n] -> { R[x] -> s[] }'
        reference: __pet_ref_5
        read: 1
        write: 0
