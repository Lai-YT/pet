start: 40
end: 101
indent: "\t"
context: '{  :  }'
schedule: '{ domain: "{ S_0[k] : k >= 252; S_2[]; S_1[] }", child: { sequence: [ {
  filter: "{ S_0[k] }", child: { schedule: "L_0[{ S_0[k] -> [(k)] }]" } }, { filter:
  "{ S_2[]; S_1[] }", child: { set: [ { filter: "{ S_1[] }" }, { filter: "{ S_2[]
  }" } ] } } ] } }'
arrays:
- context: '{  :  }'
  extent: '{ a[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ k[] }'
  element_type: unsigned char
  element_size: 1
statements:
- line: 8
  domain: '{ S_0[k] : k >= 252 }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '{ S_0[k] -> a[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: access
        index: '{ S_0[k] -> [(k - 256*floor((k)/256))] }'
        reference: __pet_ref_1
        read: 1
        write: 0
- line: -1
  domain: '{ S_1[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_1[] -> k[] }'
        index: '{ S_1[] -> k[] }'
        reference: __pet_ref_2
        kill: 1
- line: -1
  domain: '{ S_2[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '{ S_2[] -> a[] }'
        index: '{ S_2[] -> a[] }'
        reference: __pet_ref_3
        kill: 1
