start: 101
end: 225
context: '{  :  }'
types:
- name: s
  definition: "struct s {\n    struct {\n        struct {\n            int a[10];\n
    \       } f[10];\n        int b;\n    };\n}"
arrays:
- context: '{  :  }'
  extent: '{ s[] }'
  element_type: struct s
  element_size: 404
  element_is_record: 1
- context: '{  :  }'
  extent: '{ s_f[s[] -> f[i0]] : i0 >= 0 and i0 <= 9 }'
  element_type: <subfield>
  element_size: 40
  element_is_record: 1
- context: '{  :  }'
  extent: '{ s_f_a[s_f[s[] -> f[i0]] -> a[i1]] : i0 >= 0 and i0 <= 9 and i1 >= 0 and
    i1 <= 9 }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ s_b[s[] -> b[]] }'
  element_type: int
  element_size: 4
statements:
- line: 17
  domain: '{ S_0[i, j] : i >= 0 and i <= 9 and j >= 0 and j <= 9 }'
  schedule: '{ S_0[i, j] -> [0, i, j] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '{ S_0[i, j] -> s_f_a[s_f[s[] -> f[i]] -> a[j]] }'
      index: '{ S_0[i, j] -> s_f_a[s_f[s[] -> f[(i)]] -> a[(j)]] }'
      reference: __pet_ref_0
      read: 0
      write: 1
    - type: binary
      operation: '*'
      arguments:
      - type: access
        relation: '{ S_0[i, j] -> [i] }'
        index: '{ S_0[i, j] -> [(i)] }'
        reference: __pet_ref_1
        read: 1
        write: 0
      - type: access
        relation: '{ S_0[i, j] -> [j] }'
        index: '{ S_0[i, j] -> [(j)] }'
        reference: __pet_ref_2
        read: 1
        write: 0
- line: 18
  domain: '{ S_1[] }'
  schedule: '{ S_1[] -> [1] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '{ S_1[] -> s_b[s[] -> b[]] }'
      index: '{ S_1[] -> s_b[s[] -> b[]] }'
      reference: __pet_ref_3
      read: 0
      write: 1
    - type: int
      value: 1
